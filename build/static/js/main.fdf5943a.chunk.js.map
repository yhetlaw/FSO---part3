{"version":3,"sources":["components/Search.js","services/contacts.js","components/AddContact.js","components/Contacts.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Search","persons","onChange","event","newSearch","target","value","allNames","map","person","name","toUpperCase","pResult","document","getElementById","includes","innerHTML","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","AddContact","onNameChange","onNumberChange","newName","newNumber","setNewName","setNewNumber","setPersons","setLength","length","setAlertMessage","setErrorMessage","onSubmit","preventDefault","personObject","number","allNumbers","window","confirm","contactService","filter","returnedPerson","Object","assign","setTimeout","catch","error","console","log","alert","concat","type","ListItem","handleButtonDelete","text","onClick","Contacts","getAttribute","deletedPerson","Notification","message","className","Error","App","useState","alertMessage","errorMessage","useEffect","initialPersons","ReactDOM","render"],"mappings":"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","file":"static/js/main.fdf5943a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Search = ({ persons }) => {\r\n  const handleSearchChange = (event) => {\r\n    const newSearch = event.target.value;\r\n    const allNames = persons.map((person) => person.name.toUpperCase());\r\n    let pResult = document.getElementById('pExists');\r\n    allNames.includes(newSearch.toUpperCase()) ? (pResult.innerHTML = `The name ${newSearch} exists`) : (pResult.innerHTML = `The name ${newSearch} does not exist`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Search name: <input onChange={handleSearchChange} />\r\n      <p id='pExists'>{}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deletePerson };\r\n","import contactService from '../services/contacts';\r\n\r\nconst AddContact = ({\r\n  onNameChange,\r\n  onNumberChange,\r\n  persons,\r\n  newName,\r\n  newNumber,\r\n  setNewName,\r\n  setNewNumber,\r\n  setPersons,\r\n  setLength,\r\n  length,\r\n  setAlertMessage,\r\n  setErrorMessage,\r\n}) => {\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    //Map all names to uppercase and allNumbers\r\n    const allNames = persons.map((person) => person.name.toUpperCase());\r\n    const allNumbers = persons.map((person) => person.number);\r\n    //If allNames include newName or allNumber include newNumber\r\n    allNames.includes(newName.toUpperCase())\r\n      ? window.confirm(\r\n          `The name ${newName} is already added to the phonebook, replace old number with the new one?`\r\n        )\r\n        ? contactService\r\n            .update(persons.filter((person) => person.name === newName)[0].id, personObject)\r\n            .then((returnedPerson) => {\r\n              setPersons(Object.assign(persons, personObject));\r\n              setAlertMessage(`Contact ${newName} has been updated!`);\r\n              setTimeout(() => {\r\n                setAlertMessage(null);\r\n              }, 3000);\r\n              setNewName('');\r\n              setNewNumber('');\r\n              setLength(length + 1);\r\n              setLength(length - 1);\r\n            })\r\n            .catch((error) => {\r\n              setErrorMessage(`Information of ${newName} has already been removed previously!`);\r\n              setTimeout(() => {\r\n                setAlertMessage(null);\r\n              }, 3000);\r\n            })\r\n        : console.log('fail')\r\n      : allNumbers.includes(newNumber)\r\n      ? alert(`Number ${newNumber} is taken`)\r\n      : contactService.create(personObject).then((returnedPerson) => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setAlertMessage(`Contact ${newName} has been added!`);\r\n          setTimeout(() => {\r\n            setAlertMessage(null);\r\n          }, 3000);\r\n          setNewName('');\r\n          setNewNumber('');\r\n        });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={onNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={onNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\nimport contactService from '../services/contacts';\r\n\r\nconst ListItem = ({ handleButtonDelete, text, id, number }) => {\r\n  return (\r\n    <li>\r\n      {text} {number}{' '}\r\n      <button data-id={id} onClick={handleButtonDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Contacts = ({ persons, setPersons, setLength }) => {\r\n  const handleButtonDelete = (event) => {\r\n    const id = event.target.getAttribute('data-id');\r\n    console.log(id);\r\n    if (window.confirm(`Are you sure you want to delete?`)) {\r\n      contactService\r\n        .deletePerson(id)\r\n        .then((deletedPerson) => {\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          console.log('Deleted successfully');\r\n          setLength(persons.length);\r\n        })\r\n        .catch((error) => {\r\n          console.log('fail');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {persons.map((person) => (\r\n          <ListItem\r\n            key={person.id}\r\n            id={person.id}\r\n            text={person.name}\r\n            number={person.number}\r\n            handleButtonDelete={handleButtonDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className='alert'>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Error = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className='error'>{message}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport AddContact from './components/AddContact';\nimport Contacts from './components/Contacts';\nimport contactService from './services/contacts';\nimport Notification from './components/Notification';\nimport Error from './components/Error';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [length, setLength] = useState([]);\n  const [alertMessage, setAlertMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n\n  useEffect(() => {\n    contactService.getAll().then((initialPersons) => {\n      console.log('promise fulfilled');\n      setPersons(initialPersons);\n    });\n  }, [length]);\n\n  console.log('render', persons.length, 'persons');\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Search persons={persons} />\n      <h1>Add a new contact</h1>\n      <AddContact\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        persons={persons}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        setPersons={setPersons}\n        setLength={setLength}\n        length={length}\n        setAlertMessage={setAlertMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <h1>Contacts</h1>\n      <Notification message={alertMessage} />\n      <Error message={errorMessage} />\n      <Contacts persons={persons} setPersons={setPersons} setLength={setLength} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}